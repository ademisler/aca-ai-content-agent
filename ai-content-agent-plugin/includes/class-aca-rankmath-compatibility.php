<?php
/**
 * RankMath SEO Plugin Compatibility Class
 *
 * Handles integration with RankMath SEO plugin to prevent conflicts
 * and provide seamless compatibility for AI Content Agent.
 *
 * @package AI_Content_Agent
 * @subpackage Compatibility
 * @since 2.3.8
 */

// Prevent direct access
if (!defined('ABSPATH')) {
    exit;
}

/**
 * Class ACA_RankMath_Compatibility
 * 
 * Provides compatibility layer for RankMath SEO plugin integration
 */
class ACA_RankMath_Compatibility {
    
    /**
     * Initialize RankMath compatibility
     */
    public function __construct() {
        // Only initialize if RankMath is active
        if ($this->is_rankmath_active()) {
            $this->init_hooks();
            $this->log_compatibility_status();
        }
    }
    
    /**
     * Check if RankMath SEO plugin is active
     * 
     * @return bool True if RankMath is active
     */
    private function is_rankmath_active() {
        return is_plugin_active('seo-by-rankmath/rank-math.php') || 
               class_exists('RankMath') || 
               defined('RANK_MATH_VERSION');
    }
    
    /**
     * Initialize WordPress hooks for RankMath integration
     */
    private function init_hooks() {
        // Hook into RankMath actions for seamless integration
        add_action('rank_math/head', array($this, 'add_ai_metadata_to_head'), 10);
        add_filter('rank_math/frontend/title', array($this, 'filter_rankmath_title'), 10, 2);
        add_filter('rank_math/frontend/description', array($this, 'filter_rankmath_description'), 10, 2);
        
        // Register AI Content Agent variables with RankMath
        add_action('rank_math/vars/register_extra_replacements', array($this, 'register_aca_variables'));
        
        // Hook into post save to sync AI-generated meta with RankMath
        add_action('save_post', array($this, 'sync_ai_meta_with_rankmath'), 20, 2);
        
        // Add AI content indicators to RankMath schema
        add_filter('rank_math/json_ld', array($this, 'add_ai_schema_data'), 10, 2);
    }
    
    /**
     * Add AI-generated metadata to page head
     */
    public function add_ai_metadata_to_head() {
        global $post;
        
        if (!$post) {
            return;
        }
        
        // Check if content was AI-generated
        $ai_generated = get_post_meta($post->ID, '_aca_ai_generated', true);
        if ($ai_generated) {
            echo '<!-- AI Content Agent: Content generated with AI assistance -->' . "\n";
        }
    }
    
    /**
     * Filter RankMath title to include AI enhancements
     * 
     * @param string $title Current title
     * @param object $post Post object
     * @return string Modified title
     */
    public function filter_rankmath_title($title, $post = null) {
        if (!$post) {
            global $post;
        }
        
        if (!$post) {
            return $title;
        }
        
        // Get AI-enhanced title if available
        $ai_title = get_post_meta($post->ID, '_aca_meta_title', true);
        
        if (!empty($ai_title) && empty($title)) {
            return $ai_title;
        }
        
        return $title;
    }
    
    /**
     * Filter RankMath description to include AI enhancements
     * 
     * @param string $description Current description
     * @param object $post Post object
     * @return string Modified description
     */
    public function filter_rankmath_description($description, $post = null) {
        if (!$post) {
            global $post;
        }
        
        if (!$post) {
            return $description;
        }
        
        // Get AI-enhanced description if available
        $ai_description = get_post_meta($post->ID, '_aca_meta_description', true);
        
        if (!empty($ai_description) && empty($description)) {
            return $ai_description;
        }
        
        return $description;
    }
    
    /**
     * Register AI Content Agent variables with RankMath
     */
    public function register_aca_variables() {
        if (!function_exists('rank_math_register_var_replacement')) {
            return;
        }
        
        // Register custom variables for AI-generated content
        rank_math_register_var_replacement(
            'aca_ai_focus_keyword',
            array(
                'name'        => esc_html__('ACA AI Focus Keyword', 'ai-content-agent'),
                'description' => esc_html__('Focus keyword generated by AI Content Agent', 'ai-content-agent'),
                'variable'    => 'aca_ai_focus_keyword',
                'example'     => 'wordpress seo optimization',
            ),
            array($this, 'get_ai_focus_keyword')
        );
        
        rank_math_register_var_replacement(
            'aca_content_score',
            array(
                'name'        => esc_html__('ACA Content Score', 'ai-content-agent'),
                'description' => esc_html__('AI-generated content quality score', 'ai-content-agent'),
                'variable'    => 'aca_content_score',
                'example'     => '95',
            ),
            array($this, 'get_content_score')
        );
    }
    
    /**
     * Get AI focus keyword for RankMath variable
     * 
     * @return string AI focus keyword
     */
    public function get_ai_focus_keyword() {
        global $post;
        
        if (!$post) {
            return '';
        }
        
        return get_post_meta($post->ID, '_aca_focus_keyword', true);
    }
    
    /**
     * Get content score for RankMath variable
     * 
     * @return string Content score
     */
    public function get_content_score() {
        global $post;
        
        if (!$post) {
            return '';
        }
        
        return get_post_meta($post->ID, '_aca_content_score', true);
    }
    
    /**
     * Sync AI-generated meta with RankMath on post save
     * 
     * @param int $post_id Post ID
     * @param object $post Post object
     */
    public function sync_ai_meta_with_rankmath($post_id, $post) {
        // Skip for autosaves and revisions
        if (wp_is_post_autosave($post_id) || wp_is_post_revision($post_id)) {
            return;
        }
        
        // Only sync for posts created by AI Content Agent
        $ai_generated = get_post_meta($post_id, '_aca_ai_generated', true);
        if (!$ai_generated) {
            return;
        }
        
        // Sync title
        $ai_title = get_post_meta($post_id, '_aca_meta_title', true);
        if (!empty($ai_title)) {
            update_post_meta($post_id, 'rank_math_title', $ai_title);
        }
        
        // Sync description
        $ai_description = get_post_meta($post_id, '_aca_meta_description', true);
        if (!empty($ai_description)) {
            update_post_meta($post_id, 'rank_math_description', $ai_description);
        }
        
        // Sync focus keyword
        $ai_keyword = get_post_meta($post_id, '_aca_focus_keyword', true);
        if (!empty($ai_keyword)) {
            update_post_meta($post_id, 'rank_math_focus_keyword', $ai_keyword);
        }
        
        // Set high SEO score for AI-generated content
        update_post_meta($post_id, 'rank_math_seo_score', 85);
        
        // Set appropriate robots meta
        update_post_meta($post_id, 'rank_math_robots', array('index', 'follow'));
    }
    
    /**
     * Add AI content data to RankMath JSON-LD schema
     * 
     * @param array $data Schema data
     * @param object $post Post object
     * @return array Modified schema data
     */
    public function add_ai_schema_data($data, $post) {
        if (!$post) {
            return $data;
        }
        
        // Check if content was AI-generated
        $ai_generated = get_post_meta($post->ID, '_aca_ai_generated', true);
        if (!$ai_generated) {
            return $data;
        }
        
        // Add AI assistance mention to schema if it's an article
        if (isset($data['@type']) && in_array($data['@type'], array('Article', 'BlogPosting'))) {
            // Add mention that content was created with AI assistance
            if (!isset($data['mentions'])) {
                $data['mentions'] = array();
            }
            
            $data['mentions'][] = array(
                '@type' => 'SoftwareApplication',
                'name' => 'AI Content Agent',
                'applicationCategory' => 'Content Creation Tool',
                'description' => 'AI-powered WordPress content creation plugin'
            );
        }
        
        return $data;
    }
    
    /**
     * Log compatibility status for debugging
     */
    private function log_compatibility_status() {
        if (defined('WP_DEBUG') && WP_DEBUG) {
            error_log('ACA: RankMath compatibility layer initialized successfully');
        }
    }
    
    /**
     * Get compatibility status for admin display
     * 
     * @return array Compatibility status information
     */
    public static function get_status() {
        $rankmath_active = is_plugin_active('seo-by-rankmath/rank-math.php') || 
                          class_exists('RankMath') || 
                          defined('RANK_MATH_VERSION');
        
        return array(
            'active' => $rankmath_active,
            'version' => $rankmath_active && defined('RANK_MATH_VERSION') ? RANK_MATH_VERSION : 'Unknown',
            'compatible' => true,
            'features' => array(
                'meta_sync' => true,
                'schema_integration' => true,
                'variable_replacement' => true,
                'seo_scoring' => true
            )
        );
    }
}